{"version":3,"sources":["style.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss"],"names":["module","exports","Container","children","className","styles","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","contacts","find","contact","toLowerCase","alert","resetInput","this","form","label","type","input","pattern","onChange","title","placeholder","autoComplete","required","btn","Component","Filter","ContactList","onDeleteContacts","list","map","id","list__item","onClick","App","filter","addContact","nanoid","deleteContacts","contactId","prevState","changeFilter","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","toLowerCaseFilter","filteredContacts","includes","title__phonebook","title__contacts","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb244b93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__phonebook\":\"style_title__phonebook__3aFT2\",\"title__contacts\":\"style_title__contacts__2HUDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"btn\":\"ContactForm_btn__1BmbG\"};","import React from 'react';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import React, { Component } from 'react';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onSubmit, contacts } = this.props;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    onSubmit({ name, number });\n\n    this.resetInput();\n  };\n\n  resetInput = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            className={styles.input}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            onChange={this.handleInputChange}\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter your name\"\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            className={styles.input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            onChange={this.handleInputChange}\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter your phone number\"\n            autoComplete=\"on\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        placeholder=\"Find your contact\"\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={styles.list__item} key={id}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className={styles.btn}\n              onClick={() => onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './style.module.scss';\n\nclass App extends Component {\n  static defaultProps = {\n    filter: '',\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(savedContacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const toLowerCaseFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(toLowerCaseFilter) ||\n        contact.number.toLowerCase().includes(toLowerCaseFilter),\n    );\n\n    return (\n      <Container>\n        <h1 className={styles.title__phonebook}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        <h2 className={styles.title__contacts}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"list__item\":\"ContactList_list__item__29IJl\",\"btn\":\"ContactList_btn__LjK5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};"],"sourceRoot":""}